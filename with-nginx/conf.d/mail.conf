server {
    listen       80;
    server_name  localhost;
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }
    location /lua_content {
        default_type 'text/plain';

        content_by_lua_block {
          ngx.say('Hello world!')
        }
    }

    location /config {
	default_type 'text/plain';
        content_by_lua_block {

		local email = ngx.req.get_headers()["Auth-SMTP-To"]
		local function extract_hostname(email)
           		local pattern = "@([^>]+)>"
            		local hostname = string.match(email, pattern)
            		return hostname
        	end

		local resolver = require("resty.dns.resolver")
            	local r, err = resolver:new{
                	nameservers = {"127.0.0.11"},
                	retrans = 5,  -- 5 retransmissions on receive timeout
                	timeout = 2000,  -- 2 sec
                	no_random = true, -- always start with first nameserver
            	}
		if not r then
            		ngx.status = 500
            		ngx.say("Internal Server Error: Failed to instantiate resolver: " .. err)
            		return ngx.exit(500)
        	end
        	
		local hostname = extract_hostname(email)
        	if not hostname then
            		ngx.status = 400
            		ngx.say("Bad Request: Invalid email address")
            		return ngx.exit(400)
        	end	

		if hostname == "hr.abc.com" then
	                local answers, err = r:query("postfix-1")
        	        if not answers then
                	        ngx.status = 500
                        	ngx.say("Internal Server Error: Failed to resolve host " .. hostname .. ": " .. err)
                        	return ngx.exit(500)
                	end
                	ip = answers[1].address
                        ngx.header['Auth-Server'] =  ip
			ngx.header['Email-From-Header'] = email
                        ngx.header['Auth-Server-Host'] =  hostname
                        ngx.header['Auth-Status'] = 'OK'
                        ngx.header['Auth-Port'] = '25'
                        ngx.send_headers()
			ngx.say("hi")
        	elseif hostname == "eng.abc.com" then
	                local answers, err = r:query("postfix-2")
        	        if not answers then
                	        ngx.status = 500
                        	ngx.say("Internal Server Error: Failed to resolve host " .. hostname .. ": " .. err)
                        	return ngx.exit(500)
                	end
			ip = answers[1].address
                        ngx.header['Auth-Server'] =  ip
                        ngx.header['Auth-Server-Host'] =  hostname
                        ngx.header['Auth-Status'] = 'OK'
                        ngx.header['Auth-Port'] = '25'
                        ngx.header['Content-Type'] = 'text/html;charset=utf-8'
                        ngx.header["Status-Line"] = "HTTP/1.0 200 OK"
                        ngx.exit(200)

        	else
            		ngx.say("Unknown hostname: " .. hostname)
        	end

        }
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
